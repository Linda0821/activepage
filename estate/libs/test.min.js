"use strict";

(function _callee() {
    var _user, user, utList, now, startTime, newbies, _now, _startTime, result, _al, al2, _user2, ctl, mtl, nl, al1;

    return regeneratorRuntime.async(function _callee$(_context) {
        while (1) {
            switch (_context.prev = _context.next) {
                case 0:
                    _context.prev = 0;
                    _context.next = 3;
                    return regeneratorRuntime.awrap(UMeUser.initUser("ab8c40de7539dc85", "5a7d5cff00d6cb4a940dc202"));

                case 3:
                    _user = _context.sent;

                    $("#UMeUser").append("<br>Current User Token: " + _user.sessionToken + "<br> Current User ObjectId: " + _user.objectId());
                    console.log("  userToken." + _user.sessionToken);
                    console.log("  userObjId." + _user.objectId());
                    $("#UMeUser").append("<br><br>User: " + _user.toJSON());
                    $("#UMeUser").append("<br><br>User getSign(): " + _user.getSign());
                    _context.next = 15;
                    break;

                case 11:
                    _context.prev = 11;
                    _context.t0 = _context["catch"](0);

                    $("#UMeUser").append("<br> init user fail:" + _context.t0.appendMessage);
                    console.log("init user fail: " + _context.t0);

                case 15:
                    _context.next = 17;
                    return regeneratorRuntime.awrap(UMeUser.getUMeUser());

                case 17:
                    user = _context.sent;

                    $("#UMeUser").append("<br>Cache Current User Token: " + user.sessionToken + "<br> Current User ObjectId: " + user.objectId());
                    $("#UMeUser").append("<br><br>Cache User: " + user.toJSON());
                    $("#UMeUser").append("<br><br>Cache User getSign(): " + user.getSign());
                    $("#UMeUser").append("<br><br>UserTaskList: ");
                    _context.next = 24;
                    return regeneratorRuntime.awrap(UserTask.getUserTaskList());

                case 24:
                    utList = _context.sent;

                    utList.forEach(function (ut) {
                        var metatask = ut["MetaTask"];
                        $("#UMeUser").append("<br>" + metatask["Title"] + " " + metatask["Coin"]);
                    });

                    // getNewbiesApprentics
                    _context.prev = 26;
                    now = Date.now();
                    startTime = now - 864000000 * 3;
                    _context.next = 31;
                    return regeneratorRuntime.awrap(user.getNewbiesApprentics(startTime, now, 10, 0, null));

                case 31:
                    newbies = _context.sent;

                    console.log("newbies: " + JSON.stringify(newbies));
                    _context.next = 38;
                    break;

                case 35:
                    _context.prev = 35;
                    _context.t1 = _context["catch"](26);

                    console.log(_context.t1);

                case 38:
                    _context.prev = 38;
                    _context.next = 41;
                    return regeneratorRuntime.awrap(UMeUser.requestSMSOTP("xxxxxxxxxx"));

                case 41:
                    $("#UMeUser").append("<br> request otp success");
                    _context.next = 48;
                    break;

                case 44:
                    _context.prev = 44;
                    _context.t2 = _context["catch"](38);

                    $("#UMeUser").append("<br> request otp fail:" + _context.t2.appendMessage);
                    console.log("request otp fail: " + _context.t2);

                case 48:
                    _context.prev = 48;
                    _context.next = 51;
                    return regeneratorRuntime.awrap(user.checkInviteCode("0123457"));

                case 51:
                    $("#UMeUser").append("<br> invite code is valid");
                    // document.write("<br>User check invite code: " + JSON.stringify(resp));
                    _context.next = 57;
                    break;

                case 54:
                    _context.prev = 54;
                    _context.t3 = _context["catch"](48);

                    console.log("send checkInviteCode success open api fail: " + _context.t3);

                case 57:
                    _context.prev = 57;
                    _context.next = 60;
                    return regeneratorRuntime.awrap(user.checkInviteCode("1234"));

                case 60:
                    $("#UMeUser").append("<br> invite code is valid");
                    _context.next = 67;
                    break;

                case 63:
                    _context.prev = 63;
                    _context.t4 = _context["catch"](57);

                    $("#UMeUser").append("<br> invite code is invalid:" + _context.t4.appendMessage);
                    console.log("send open api checkInviteCode fail: " + _context.t4);

                case 67:
                    _context.prev = 67;
                    _context.next = 70;
                    return regeneratorRuntime.awrap(user.bindInviteCode("0123457"));

                case 70:
                    $("#UMeUser").append("<br> bindInviteCode success");
                    _context.next = 77;
                    break;

                case 73:
                    _context.prev = 73;
                    _context.t5 = _context["catch"](67);

                    $("#UMeUser").append("<br> bindInviteCode fail:" + _context.t5.appendMessage);
                    console.log("send open api bindInviteCode fail: " + _context.t5);

                case 77:
                    _context.prev = 77;
                    _now = moment().utc();
                    _startTime = moment().utc().subtract(3, "days").valueOf();
                    // $("#UMeUser").append("<br> end ts :"+now.valueOf());
                    // $("#UMeUser").append("<br> start ts :"+now.subtract(3,"days").valueOf());

                    _context.next = 82;
                    return regeneratorRuntime.awrap(user.getApprenticeWithEnoughTribute(_startTime, _now.valueOf(), 1, 10));

                case 82:
                    result = _context.sent;

                    $("#UMeUser").append("<br> getApprenticeWithEnoughTribute success:<br>" + JSON.stringify(result));
                    _context.next = 90;
                    break;

                case 86:
                    _context.prev = 86;
                    _context.t6 = _context["catch"](77);

                    $("#UMeUser").append("<br> getApprenticeWithEnoughTribute fail:" + _context.t6.appendMessage);
                    console.log("send open api getApprenticeWithEnoughTribute fail: " + _context.t6);

                case 90:
                    _context.prev = 90;
                    _context.next = 93;
                    return regeneratorRuntime.awrap(user.userSignToday());

                case 93:
                    $("#UMeUser").append("<br><br>User sign for today");

                    _context.next = 100;
                    break;

                case 96:
                    _context.prev = 96;
                    _context.t7 = _context["catch"](90);

                    $("#UMeUser").append("<br> userSignToday is invalid:" + _context.t7.appendMessage);
                    console.log("send open api userSignToday fail: " + _context.t7);

                case 100:
                    _context.prev = 100;
                    _context.next = 103;
                    return regeneratorRuntime.awrap(Apprentice.getActivateList(0, 0));

                case 103:
                    _al = _context.sent;

                    $("#Apprentice").append("<br>Apprentice getActivateList: " + JSON.stringify(_al));
                    _context.next = 110;
                    break;

                case 107:
                    _context.prev = 107;
                    _context.t8 = _context["catch"](100);

                    $("#Apprentice").append("<br>Apprentice getActivateList:" + _context.t8.appendMessage);

                case 110:
                    _context.prev = 110;
                    _context.next = 113;
                    return regeneratorRuntime.awrap(Apprentice.getAwakenList(0, 0));

                case 113:
                    al2 = _context.sent;

                    $("#Apprentice").append("<br><br>Apprentice getAwakenList: " + JSON.stringify(al2));
                    _context.next = 120;
                    break;

                case 117:
                    _context.prev = 117;
                    _context.t9 = _context["catch"](110);

                    $("#Apprentice").append("<br>Apprentice getAwakenList fail:" + _context.t9.appendMessage);

                case 120:
                    _context.prev = 120;
                    _context.next = 123;
                    return regeneratorRuntime.awrap(UMeUser.getUMeUser());

                case 123:
                    _user2 = _context.sent;
                    _context.next = 126;
                    return regeneratorRuntime.awrap(_user2.wakeUpApprentice());

                case 126:
                    $("#Apprentice").append("<br><br>Wakeup Apprentice Success");
                    _context.next = 133;
                    break;

                case 129:
                    _context.prev = 129;
                    _context.t10 = _context["catch"](120);

                    $("#Apprentice").append("<br> Wakeup Apprentice fail:" + _context.t10.appendMessage);
                    console.log("send open api Wakeup Apprentice fail: " + _context.t10);

                case 133:
                    _context.prev = 133;
                    _context.next = 136;
                    return regeneratorRuntime.awrap(CoinTransaction.getUserTransactionsList(0, 0));

                case 136:
                    ctl = _context.sent;

                    $("#CoinTransaction").append("<br>CoinTransaction getUserTransactionsList: " + JSON.stringify(ctl));
                    _context.next = 143;
                    break;

                case 140:
                    _context.prev = 140;
                    _context.t11 = _context["catch"](133);

                    $("#CoinTransaction").append("<br>CoinTransaction getUserTransactionsList fail:" + _context.t11.appendMessage);

                case 143:
                    _context.prev = 143;
                    _context.next = 146;
                    return regeneratorRuntime.awrap(MoneyTransaction.getUserTransactionsList(0, 0));

                case 146:
                    mtl = _context.sent;

                    $("#MoneyTransaction").append("<br>MoneyTransaction getUserTransactionsList: " + JSON.stringify(mtl));
                    _context.next = 153;
                    break;

                case 150:
                    _context.prev = 150;
                    _context.t12 = _context["catch"](143);

                    $("#MoneyTransaction").append("<br>MoneyTransaction getUserTransactionsList fail:" + _context.t12.appendMessage);

                case 153:
                    _context.prev = 153;
                    _context.next = 156;
                    return regeneratorRuntime.awrap(Notification.getUserNotificationList(0, 0));

                case 156:
                    nl = _context.sent;

                    $("#Notification").append("<br>Notification getUserNotificationList: " + JSON.stringify(nl));
                    _context.next = 163;
                    break;

                case 160:
                    _context.prev = 160;
                    _context.t13 = _context["catch"](153);

                    $("#MoneyTransaNotificationction").append("<br>Notification getUserNotificationList fail:" + _context.t13.appendMessage);

                case 163:
                    _context.next = 165;
                    return regeneratorRuntime.awrap(Home.getHomeList());

                case 165:
                    al1 = _context.sent;

                    $("#Home").append("<br>Home getHomeList: " + JSON.stringify(al1));
                    _context.next = 169;
                    return regeneratorRuntime.awrap(Home.getTopHomeList());

                case 169:
                    al1 = _context.sent;

                    $("#Home").append("<br><br>Home getTopHomeList: " + JSON.stringify(al1));
                    _context.next = 173;
                    return regeneratorRuntime.awrap(Home.getCenterHomeList());

                case 173:
                    al1 = _context.sent;

                    $("#Home").append("<br><br>Home getCenterHomeList: " + JSON.stringify(al1));

                    _context.next = 177;
                    return regeneratorRuntime.awrap(News.getNewsList());

                case 177:
                    al1 = _context.sent;

                    $("#News").append("<br>Home getNewsList: " + JSON.stringify(al1));

                    _context.next = 181;
                    return regeneratorRuntime.awrap(Loop.getLoopList());

                case 181:
                    al1 = _context.sent;

                    $("#Loop").append("<br>Loop getLoopList: " + JSON.stringify(al1));

                    _context.next = 185;
                    return regeneratorRuntime.awrap(Banner.getBannerList());

                case 185:
                    al1 = _context.sent;

                    $("#Banner").append("<br>Banner getBannerList: " + JSON.stringify(al1));

                    _context.next = 189;
                    return regeneratorRuntime.awrap(Announcement.getAnnouncementList());

                case 189:
                    al1 = _context.sent;

                    $("#Announcement").append("<br>Announcement getAnnouncementList: " + JSON.stringify(al1));

                    _context.next = 193;
                    return regeneratorRuntime.awrap(Hot.getHotList());

                case 193:
                    al1 = _context.sent;

                    $("#Hot").append("<br>Hot getHotList: " + JSON.stringify(al1));

                    _context.next = 197;
                    return regeneratorRuntime.awrap(FAQ.getFAQList());

                case 197:
                    al1 = _context.sent;

                    $("#FAQ").append("<br>FAQ getFAQList: " + JSON.stringify(al1));

                case 199:
                case "end":
                    return _context.stop();
            }
        }
    }, null, undefined, [[0, 11], [26, 35], [38, 44], [48, 54], [57, 63], [67, 73], [77, 86], [90, 96], [100, 107], [110, 117], [120, 129], [133, 140], [143, 150], [153, 160]]);
})();